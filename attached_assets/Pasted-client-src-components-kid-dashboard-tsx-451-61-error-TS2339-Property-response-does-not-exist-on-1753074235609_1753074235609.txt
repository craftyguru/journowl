client/src/components/kid-dashboard.tsx:451:61 - error TS2339: Property 'response' does not exist on type 'Response'.

451       const aiMessage = { sender: 'ai' as const, text: data.response || "I'm here to help you write amazing stories!" };
                                                                ~~~~~~~~

client/src/pages/insights.tsx:757:18 - error TS2746: This JSX tag's 'children' prop expects a single child of type 'ReactElement<any, string | JSXElementConstructor<any>>', but multiple children were provided.

757                 <ResponsiveContainer width="100%" height={300}>
                     ~~~~~~~~~~~~~~~~~~~

server/services/achievement-tracker.ts:84:11 - error TS2353: Object literal may only specify known properties, and 'targetValue' does not exist in type '{ userId?: number; title?: string; achievementId?: string; description?: string; icon?: string; rarity?: string; type?: string; } & { userId: number; }'.

84           targetValue: achievement.targetValue,
             ~~~~~~~~~~~

server/services/achievement-tracker.ts:104:11 - error TS2353: Object literal may only specify known properties, and 'currentValue' does not exist in type '{ userId?: number; title?: string; description?: string; type?: string; targetValue?: number; goalId?: string; difficulty?: string; deadline?: Date; } & { userId: number; }'.

104           currentValue: 0,
              ~~~~~~~~~~~~

server/services/achievement-tracker.ts:122:9 - error TS2353: Object literal may only specify known properties, and 'targetValue' does not exist in type '{ userId?: number; title?: string; achievementId?: string; description?: string; icon?: string; rarity?: string; type?: string; } & { userId: number; }'.

122         targetValue: 1,
            ~~~~~~~~~~~

server/storage.ts:268:48 - error TS2353: Object literal may only specify known properties, and 'updatedAt' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; }'.

268     await db.update(userStats).set({ ...stats, updatedAt: new Date() }).where(eq(userStats.userId, userId));
                                                   ~~~~~~~~~

server/storage.ts:332:46 - error TS2353: Object literal may only specify known properties, and 'updatedAt' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<...>; }'.

332     await db.update(users).set({ ...updates, updatedAt: new Date() }).where(eq(users.id, id));
                                                 ~~~~~~~~~

server/storage.ts:358:48 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { action: string | SQL<unknown> | Placeholder<string, any>; }): PgInsertBase<PgTableWithColumns<{ name: "user_activity_logs"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_activity_logs"; ... 12 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; createdAt: PgColumn<...>; }; dialect: "pg"; }>, ... 4 more ..., never>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; }'.
  Overload 2 of 2, '(values: { action: string | SQL<unknown> | Placeholder<string, any>; }[]): PgInsertBase<PgTableWithColumns<{ name: "user_activity_logs"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "user_activity_logs"; ... 12 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; createdAt: PgColumn<...>; }; dialect: "pg"; }>, ... 4 more ..., never>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ action: string | SQL<unknown> | Placeholder<string, any>; }[]'.

358     await db.insert(userActivityLogs).values({ userId, action, details, ipAddress, userAgent });
                                                   ~~~~~~


server/storage.ts:367:55 - error TS2353: Object literal may only specify known properties, and 'updatedAt' does not exist in type '{ title?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; content?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<...>, {}, {}>; subject?: string | ... 1 more ... | PgColumn<...>; createdBy?: number | ... 1 more ... | PgColumn<...>; }'.

367     await db.update(emailCampaigns).set({ ...updates, updatedAt: new Date() }).where(eq(emailCampaigns.id, id));
                                                          ~~~~~~~~~

server/storage.ts:384:35 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { key: string | SQL<unknown> | Placeholder<string, any>; }): PgInsertBase<PgTableWithColumns<{ name: "site_settings"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "site_settings"; ... 12 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt: PgColumn<...>; }; dialect: "pg"; }>, ... 4 more ..., never>', gave the following error.
    Object literal may only specify known properties, and 'value' does not exist in type '{ key: string | SQL<unknown> | Placeholder<string, any>; }'.
  Overload 2 of 2, '(values: { key: string | SQL<unknown> | Placeholder<string, any>; }[]): PgInsertBase<PgTableWithColumns<{ name: "site_settings"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "site_settings"; ... 12 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt: PgColumn<...>; }; dialect: "pg"; }>, ... 4 more ..., never>', gave the following error.
    Object literal may only specify known properties, but 'key' does not exist in type '{ key: string | SQL<unknown> | Placeholder<string, any>; }[]'. Did you mean to write 'keys'?

384     await db.insert(siteSettings).values({ key, value, updatedBy }).onConflictDoUpdate({
                                      ~~~~~~


server/storage.ts:386:14 - error TS2353: Object literal may only specify known properties, and 'value' does not exist in type 'PgUpdateSetSource<PgTableWithColumns<{ name: "site_settings"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "site_settings"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; updatedAt:...'.

386       set: { value, updatedBy, updatedAt: new Date() }
                 ~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:66:5
    66     set: PgUpdateSetSource<T['_']['table']>;
           ~~~
    The expected type comes from property 'set' which is declared here on type 'PgInsertOnConflictDoUpdateConfig<PgInsertBase<PgTableWithColumns<{ name: "site_settings"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "site_settings"; dataType: "number"; columnType: "PgSerial"; data: number; driverParam: number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>...'

server/storage.ts:611:44 - error TS2353: Object literal may only specify known properties, and 'isRead' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; message?: string | SQL<unknown> | PgColumn<...>; sender?: string | ... 1 more ... | PgColumn<...>; }'.

611     await db.update(supportMessages).set({ isRead: true }).where(eq(supportMessages.id, id));
                                               ~~~~~~

server/storage.ts:619:36 - error TS2353: Object literal may only specify known properties, and 'promptsRemaining' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<...>; }'.

619       await db.update(users).set({ promptsRemaining: 100, promptsUsedThisMonth: 0 }).where(eq(users.id, userId));
                                       ~~~~~~~~~~~~~~~~

server/storage.ts:633:14 - error TS2353: Object literal may only specify known properties, and 'promptsUsedThisMonth' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<...>; }'.

633       .set({ promptsUsedThisMonth: (user.promptsUsedThisMonth || 0) + 1, promptsRemaining: (user.promptsRemaining || 0) - 1 })
                 ~~~~~~~~~~~~~~~~~~~~

server/storage.ts:638:38 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; stripePaymentId: string | SQL<unknown> | Placeholder<string, any>; amount: number | SQL<...> | Placeholder<...>; promptsAdded: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'status' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; stripePaymentId: string | SQL<unknown> | Placeholder<string, any>; amount: number | SQL<unknown> | Placeholder<...>; promptsAdded: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; stripePaymentId: string | SQL<unknown> | Placeholder<string, any>; amount: number | SQL<...> | Placeholder<...>; promptsAdded: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; stripePaymentId: string | SQL<unknown> | Placeholder<string, any>; amount: number | SQL<unknown> | Placeholder<...>; promptsAdded: number | ... 1 more ... | Placeholder<...>; }[]'.

638     await db.insert(promptPurchases).values({ userId, stripePaymentId, amount, promptsAdded, status: "completed" });
                                         ~~~~~~


server/storage.ts:646:34 - error TS2353: Object literal may only specify known properties, and 'promptsRemaining' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<...>; }'.

646     await db.update(users).set({ promptsRemaining: (user.promptsRemaining || 0) + promptsToAdd }).where(eq(users.id, userId));
                                     ~~~~~~~~~~~~~~~~

server/storage.ts:650:34 - error TS2353: Object literal may only specify known properties, and 'promptsUsedThisMonth' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<...>; }'.

650     await db.update(users).set({ promptsUsedThisMonth: 0, lastUsageReset: new Date() });
                                     ~~~~~~~~~~~~~~~~~~~~

server/storage.ts:668:7 - error TS2353: Object literal may only specify known properties, and 'currentPlan' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<...>; }'.

668       currentPlan: tier,
          ~~~~~~~~~~~

server/storage.ts:680:34 - error TS2353: Object literal may only specify known properties, and 'storageUsedMB' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<...>; }'.

680     await db.update(users).set({ storageUsedMB: newUsage }).where(eq(users.id, userId));
                                     ~~~~~~~~~~~~~

server/storage.ts:694:34 - error TS2353: Object literal may only specify known properties, and 'promptsRemaining' does not exist in type '{ email?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<...>; }'.

694     await db.update(users).set({ promptsRemaining: newPrompts }).where(eq(users.id, userId));
                                     ~~~~~~~~~~~~~~~~


Found 20 errors in 4 files.

Errors  Files
     1  client/src/components/kid-dashboard.tsx:451
     1  client/src/pages/insights.tsx:757
     3  server/services/achievement-tracker.ts:84
    15  server/storage.ts:268