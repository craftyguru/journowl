✅ Use one clean URL everywhere

Use Session Pooler (IPv4) + only sslmode=require. Drop extra params.

postgresql://postgres:7756GURU%21%21@aws-0-us-east-1.pooler.supabase.com:6543/postgres?sslmode=require


Keep that exact value in Replit → Secrets → DATABASE_URL.

Don’t hand-type host/port; copy the Session Pooler URI from Supabase and only replace the password (encoded).

✅ Undo SSL hacks & conflicting envs

These will trigger the “self-signed certificate” loop.

In code (db.ts), use strict but simple SSL:

import { Pool } from "pg";
import { drizzle } from "drizzle-orm/node-postgres";
import * as schema from "@shared/schema";

const cs = process.env.DATABASE_URL!;
const u = new URL(cs);
console.log("DB host in use:", u.hostname, "port:", u.port || "(default)", "db:", u.pathname);

export const pool = new Pool({
  connectionString: cs,
  ssl: { rejectUnauthorized: true }, // keep strict; Supabase uses valid certs
  max: 3,
  idleTimeoutMillis: 10_000,
  connectionTimeoutMillis: 10_000,
});

await pool.query("select now()"); // fail fast if anything’s wrong
export const db = drizzle(pool, { schema });


Remove any global disables you/agent tried:

Delete code that sets process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0".

In Replit Secrets, delete NODE_TLS_REJECT_UNAUTHORIZED, PGSSLMODE, or anything that fiddles with SSL.

Don’t pass ssl: { rejectUnauthorized: false } (that’s for local/self-signed certs; Supabase isn’t).

Restart app hard (Stop → Run).

✅ Sanity tests (copy/paste)
A) CLI test (OK for pooler; remove extra params!)
psql "postgresql://postgres:7756GURU%21%21@aws-0-us-east-1.pooler.supabase.com:6543/postgres?sslmode=require" -c "select now();"


If you get a timestamp → creds + SSL are correct.

If you see FATAL: Tenant or user not found → the DB password is wrong for this project. Reset it (below).

B) If password mismatch persists

Supabase → Settings → Database Settings → Reset database password
Set to a temporary simple one, e.g. Test1234!owl → encode Test1234%21owl, update DATABASE_URL, restart, re-run the psql test.