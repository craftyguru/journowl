import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Download, Smartphone } from 'lucide-react';

interface BeforeInstallPromptEvent extends Event {
  prompt(): Promise<void>;
  userChoice: Promise<{ outcome: 'accepted' | 'dismissed' }>;
}

export function PWAInstallButton() {
  const [deferredPrompt, setDeferredPrompt] = useState<BeforeInstallPromptEvent | null>(null);
  const [isInstallable, setIsInstallable] = useState(false);
  const [isInstalled, setIsInstalled] = useState(false);

  useEffect(() => {
    // Check if already installed
    const isInstalled = window.matchMedia('(display-mode: standalone)').matches;
    setIsInstalled(isInstalled);

    if (isInstalled) return;

    const handleBeforeInstallPrompt = (e: Event) => {
      console.log('PWA Debug: beforeinstallprompt event fired');
      e.preventDefault();
      setDeferredPrompt(e as BeforeInstallPromptEvent);
      setIsInstallable(true);
    };

    const handleAppInstalled = () => {
      console.log('PWA Debug: app installed event');
      setIsInstalled(true);
      setIsInstallable(false);
      setDeferredPrompt(null);
    };

    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
    window.addEventListener('appinstalled', handleAppInstalled);

    return () => {
      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);
      window.removeEventListener('appinstalled', handleAppInstalled);
    };
  }, []);

  const handleInstallClick = async () => {
    console.log('PWA Debug: Install button clicked');
    console.log('PWA Debug: deferredPrompt exists:', !!deferredPrompt);

    // If we have the native prompt, use it
    if (deferredPrompt) {
      try {
        await deferredPrompt.prompt();
        const { outcome } = await deferredPrompt.userChoice;
        
        if (outcome === 'accepted') {
          setIsInstalled(true);
        }
        
        setDeferredPrompt(null);
        setIsInstallable(false);
        return;
      } catch (error) {
        console.error('PWA Debug: Error during install prompt:', error);
      }
    }

    // Show explanation and manual instructions
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    const isAndroid = /Android/i.test(navigator.userAgent);
    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);

    if (isDevelopment()) {
      showDevelopmentMessage();
    } else if (isIOS) {
      showIOSInstructions();
    } else if (isAndroid) {
      showAndroidInstructions(deferredPrompt);
    } else if (isMobile) {
      showGenericMobileInstructions();
    } else {
      showDesktopInstructions();
    }
  };

  const isDevelopment = () => {
    return window.location.hostname.includes('replit.dev') || window.location.hostname === 'localhost';
  };

  const showDevelopmentMessage = () => {
    alert(`PWA Installation Info:

üöÄ For full PWA installation, visit: https://journowl.app

Why it doesn't work here:
‚Ä¢ Development domains don't trigger install prompts
‚Ä¢ Browsers require trusted production domains
‚Ä¢ Full PWA features need HTTPS production environment

On production (journowl.app):
‚Ä¢ Install button will work automatically
‚Ä¢ Mobile users get native install prompts
‚Ä¢ Full offline capabilities available

Current environment: Development Mode`);
  };

  const showIOSInstructions = () => {
    alert(`üì± Install JournOwl on iPhone/iPad:

Steps:
1. Tap the Share button (‚¨ÜÔ∏è) at the bottom of Safari
2. Scroll down and tap "Add to Home Screen"
3. Tap "Add" to install JournOwl as an app

Note: iOS Safari doesn't support automatic install prompts. Manual installation is the only way on iPhone/iPad.

Once installed, JournOwl will appear on your home screen like a native app!`);
  };

  const showAndroidInstructions = (hasPrompt: boolean) => {
    alert(`üîç PWA Install Button Analysis:

WHY THE BUTTON SEEMS TO "DO NOTHING":
‚ùå The beforeinstallprompt event hasn't fired yet
‚ùå Chrome requires 30-60+ seconds of active browsing
‚ùå Must visit the site multiple times over several days
‚ùå Cannot be in private/incognito mode
‚ùå Must show "user engagement signals"

CURRENT STATUS:
‚Ä¢ beforeinstallprompt event: ${hasPrompt ? '‚úÖ FIRED' : '‚ùå NOT FIRED'}
‚Ä¢ Browser: ${navigator.userAgent.includes('Chrome') ? 'Chrome ‚úÖ' : 'Other browser'}
‚Ä¢ Domain: ${window.location.hostname === 'journowl.app' ? 'Production ‚úÖ' : 'Development'}

MANUAL INSTALLATION (WORKS NOW):
1. Tap browser menu (‚ãÆ) 
2. Look for "Add to Home screen" or "Install app"
3. Tap it to install JournOwl

The install button will work automatically once browser engagement requirements are met!`);
  };

  const showGenericMobileInstructions = () => {
    alert(`üì± Install JournOwl:

For your mobile browser:
1. Open browser menu (usually ‚ãÆ or ‚â°)
2. Look for "Add to Home screen" or "Install app"
3. Follow the installation prompts

The app will be added to your home screen!`);
  };

  const showDesktopInstructions = () => {
    alert(`üíª Install JournOwl on Desktop:

CHROME/EDGE:
‚Ä¢ Look for install icon (‚¨áÔ∏è) in address bar (right side)
‚Ä¢ Click it to install

MANUAL METHOD:
‚Ä¢ Chrome menu (‚ãÆ) ‚Üí "Install JournOwl"
‚Ä¢ Or "More tools" ‚Üí "Create shortcut"

The app will install and open like a native desktop app!`);
  };

  // Don't show if already installed
  if (isInstalled) {
    return null;
  }

  return (
    <Button
      onClick={handleInstallClick}
      variant="outline"
      size="sm"
      className="flex items-center gap-2 bg-gradient-to-r from-purple-500 to-blue-500 text-white border-0 hover:from-purple-600 hover:to-blue-600"
    >
      <Smartphone className="w-4 h-4" />
      <Download className="w-4 h-4" />
      {isInstallable ? 'Install App' : 'Install Help'}
    </Button>
  );
}